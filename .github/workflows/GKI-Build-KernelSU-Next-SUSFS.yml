name: ace5pro gki max
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8750'
      FEIL:
        description: "配置文件"
        required: true
        default: 'oneplus_ace5_pro'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'sun'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android15'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '6.6'
      KERNEL_NAME:
        description: "修改内核名称"
        required: true
        default: '-android15-8-@'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AK3_ACCESS_TOKEN: ${{ secrets.AK3_ACCESS_TOKEN }}
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
          git config --global user.name "build"
          git config --global user.email "2106456897@qq.com"

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y python3 git curl rsync libssl-dev libncurses-dev flex bison

      - name: Install repo tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
          mkdir -p kernel_workspace && cd kernel_workspace
          repo init -u https://github.com/JiuGeFaCai/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1
          repo sync -c -j$(nproc --all) --no-tags --force-sync
          rm -f kernel_platform/common/android/abi_gki_protected_exports_* 2>/dev/null || true

      - name: Set up SukiSU
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-dev
          cd KernelSU
          KSU_VERSION=$(( $(git rev-list --count HEAD) + 10606 ))
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile

      - name: Set up susfs
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
          git clone https://github.com/ExmikoN/SukiSU_patch.git --depth=1

          cd kernel_platform
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-*.patch ./common/
          cp -rv ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp -rv ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/

          cp -r ../SukiSU_patch/other/lz4k/include/linux/* ./common/include/linux/
          cp -r ../SukiSU_patch/other/lz4k/lib/* ./common/lib/
          find ./common -name "*.patch" -exec chmod 644 {} \;

      - name: Apply core patches
        run: |
          cd kernel_workspace/kernel_platform/common
          patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true
          patch -p1 -F 3 < syscall_hooks.patch
          cp ../../SukiSU_patch/other/lz4k_patch/${{ github.event.inputs.KERNEL_VERSION }}/lz4kd.patch ./
          patch -p1 -F 3 < lz4kd.patch || true

      - name: Configure kernel
        run: |
          cd kernel_workspace/kernel_platform
          echo -e "\n# SUSFS Configuration" >> common/arch/arm64/configs/gki_defconfig
          cat <<EOF >> common/arch/arm64/configs/gki_defconfig
CONFIG_KSU=y
CONFIG_KPM=y
CONFIG_KSU_SUSFS=y
CONFIG_CRYPTO_LZ4K=y
CONFIG_CRYPTO_LZ4KD=y
EOF
          sed -i 's/check_defconfig//' common/build.config.gki
          git commit -a -m "Apply core configurations" --allow-empty

      - name: Integrate sched_ext
        run: |
          cd kernel_workspace/kernel_platform
          git clone https://github.com/MAXCUK/sched.git -b ext --depth=1
          rsync -av --delete ./sched/ ./common/kernel/sched/ \
            --exclude=.git \
            --exclude=README.md
          
          cd common/kernel/sched
          sed -i.bak '/# include "ext.c"/a\
# include "hmbird_sched_proc_main.c"\
#endif\
\
#ifdef CONFIG_SLIM_SCHED\
# include "slim_sysctl.c"' build_policy.c
          
          # Validate critical files
          [ ! -f "hmbird_sched_proc_main.c" ] && echo "::error::Missing hmbird_sched_proc_main.c" && exit 1
          [ ! -f "slim_sysctl.c" ] && echo "::error::Missing slim_sysctl.c" && exit 1

      - name: Build kernel
        timeout-minutes: 90
        run: |
          cd kernel_workspace/kernel_platform
          export PATH="/usr/lib/ccache:$PATH"
          tools/bazel run --config=fast --config=stamp --lto=thin //common:kernel_aarch64_dist -- --dist_dir=dist

      - name: Package artifacts
        run: |
          cd kernel_workspace/kernel_platform/dist
          curl -LO https://github.com/ShirkNeko/SukiSU_KernelPatch_patch/releases/download/0.11-beta/patch_linux
          chmod +x patch_linux
          ./patch_linux
          
          git clone https://${{ env.AK3_ACCESS_TOKEN }}@github.com/MAXCUK/AnyKernel3-ace5Pro.git AnyKernel3-kpm
          mv Image_kpm AnyKernel3-kpm/Image
          zip -r9 Kernel_${{ env.KSUVER }}_kpm.zip AnyKernel3-kpm/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: KernelBuild_${{ github.run_id }}
          path: |
            kernel_workspace/kernel_platform/dist/*.zip
            kernel_workspace/kernel_platform/dist/Image*


