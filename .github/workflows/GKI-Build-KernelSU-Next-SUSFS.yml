name: oneplus_13t gki max
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8750'
      FEIL:
        description: "配置文件"
        required: true
        default: 'oneplus_13t'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'sun'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android15'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '6.6'
      KERNEL_NAME:
        description: "修改内核名称"
        required: true
        default: '-android15-8-@'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AK3_ACCESS_TOKEN: ${{ secrets.AK3_ACCESS_TOKEN }}
      CCACHE_DIR: /tmp/ccache
      BAZEL_CACHE: /tmp/bazel_cache
    timeout-minutes: 120

    steps:
      - name: Configure environment
        run: |
          sudo mkdir -p /mnt/ramdisk
          sudo mount -t tmpfs -o size=8G tmpfs /mnt/ramdisk
          echo "DEBIAN_FRONTEND=noninteractive" >> $GITHUB_ENV

      - name: Setup build tools
        uses: actions/cache@v3
        with:
          path: |
            /tmp/ccache
            /tmp/bazel_cache
          key: ${{ runner.os }}-kernel-build-${{ hashFiles('**/BUILD.bazel') }}

      - name: System optimization
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 6144
          swap-reserve-mb: 4096
          remove-android: 'true'

      - name: Configure Git
        run: |
          git config --global user.name "CI Builder"
          git config --global user.email "ci@kernel.build"
          git config --global advice.detachedHead false

      - name: Install dependencies
        run: |
          sudo apt-get update -q
          sudo apt-get install -yq --no-install-recommends \
            python3 python-is-python3 git curl gnupg ca-certificates \
            build-essential flex bison libssl-dev libelf-dev \
            gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu \
            openjdk-11-jdk bazel-6.1.2 ccache rsync

          sudo ln -sf /usr/bin/bazel-6.1.2 /usr/bin/bazel
          echo "/usr/lib/ccache" >> $GITHUB_PATH

      - name: Repo initialization
        run: |
          mkdir -p kernel_workspace
          cd kernel_workspace
          repo init \
            -u https://github.com/MAXCUK/kernel_manifest.git \
            -b refs/heads/oneplus/${{ inputs.CPU }} \
            -m ${{ inputs.FEIL }}.xml \
            --depth=1 \
            --repo-revision=stable

          repo sync \
            -c \
            -j$(nproc) \
            --no-tags \
            --no-clone-bundle \
            --optimized-fetch

      - name: Clean protected exports
        run: |
          find kernel_workspace -name 'abi_gki_protected_exports_*' \
            -exec rm -fv {} +

      - name: KernelSU integration
        run: |
          cd kernel_workspace/kernel_platform
          curl -fsSL https://git.io/sukisu-setup | bash -s -- --susfs-dev
          
          cd KernelSU
          KSU_VERSION=$(( $(git rev-list --count HEAD) + 10606 ))
          echo "KSUVER=${KSU_VERSION}" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=.*/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile

      - name: SUSFS preparation
        run: |
          cd kernel_workspace
          git clone --filter=blob:none \
            https://gitlab.com/simonpunk/susfs4ksu.git \
            -b gki-${{ inputs.ANDROID_VERSION }}-${{ inputs.KERNEL_VERSION }}
          
          rsync -a susfs4ksu/kernel_patches/50_add_susfs_in_gki-*.patch \
            kernel_platform/common/
          
          find susfs4ksu/kernel_patches/fs/ -type f \
            -exec cp -v {} kernel_platform/common/fs/ \;

      - name: Apply kernel patches
        run: |
          cd kernel_workspace/kernel_platform/common
          
          # SUSFS核心补丁
          patch -p1 --forward < 50_add_susfs_in_gki-${{ inputs.ANDROID_VERSION }}-${{ inputs.KERNEL_VERSION }}.patch
          
          # LZ4K优化
          cp ../../SukiSU_patch/other/lz4k_patch/${{ inputs.KERNEL_VERSION }}/lz4kd.patch .
          patch -p1 --no-backup-if-mismatch < lz4kd.patch
          
          # 系统调用Hook
          patch -p1 --force < ../../SukiSU_patch/hooks/syscall_hooks.patch

      - name: Kernel configuration
        run: |
          cd kernel_workspace/kernel_platform
          localversion_script="common/scripts/setlocalversion"
          
          # 内核版本标识
          sed -i "s/res=\".*\"/res='${{ inputs.KERNEL_NAME }}'/" $localversion_script
          
          # GKI配置增强
          config_file="common/arch/arm64/configs/gki_defconfig"
          cat << EOF >> $config_file
          # SUSFS特性
          CONFIG_KSU=y
          CONFIG_KPM=y
          CONFIG_KSU_SUSFS=y
          CONFIG_CRYPTO_LZ4K=y
          
          # 调度器扩展
          CONFIG_SCHED_CLASS_EXT=y
          EOF
          
          # 禁用配置检查
          sed -i "s/check_defconfig//" common/build.config.gki

      - name: Scheduler integration
        run: |
          cd kernel_workspace/kernel_platform
          git clone --depth=1 https://github.com/egcd123/sched_ext.git
          
          cp -av sched_ext/* common/kernel/sched/
          sed -i '/ext.c/a\#include "hmbird_sched_proc_main.c"' \
            common/kernel/sched/build_policy.c

      - name: Build kernel
        run: |
          cd kernel_workspace/kernel_platform
          export CCACHE_DIR=/tmp/ccache
          export CCACHE_MAXSIZE=5G
          
          bazel build \
            --config=fast \
            --config=stamp \
            --lto=thin \
            --disk_cache=/tmp/bazel_cache \
            --sandbox_base=/mnt/ramdisk \
            --experimental_remote_cache_compression \
            //common:kernel_aarch64_dist

      - name: Post-processing
        run: |
          cd kernel_workspace/kernel_platform/dist
          curl -LOfs https://github.com/ShirkNeko/SukiSU_KernelPatch_patch/releases/download/0.11-beta/patch_linux
          chmod +x patch_linux
          
          # 生成双版本镜像
          cp Image{,_original}
          ./patch_linux && mv oImage Image_kpm

      - name: Package artifacts
        run: |
          cd kernel_workspace/kernel_platform/dist
          clone_repo() {
            git clone \
              -c advice.detachedHead=false \
              https://${AK3_ACCESS_TOKEN}@github.com/MAXCUK/AnyKernel3-ace5Pro.git \
              $1 \
              --depth=1 \
              --single-branch
          }
          
          clone_repo AnyKernel3-no_kpm
          clone_repo AnyKernel3-kpm
          
          rsync -av Image_original AnyKernel3-no_kpm/Image
          rsync -av Image_kpm AnyKernel3-kpm/Image

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build-${{ env.KSUVER }}
          path: |
            kernel_workspace/kernel_platform/dist/AnyKernel3-*
          compression-level: 9
