name: oneplus_13t GKI Max Build
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支名称"
        required: true
        default: 'sm8750'
      FEIL:
        description: "配置文件名称"
        required: true
        default: 'oneplus_13t'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'sun'
      ANDROID_VERSION:
        description: "安卓版本"
        required: true
        default: 'android15'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '6.6'
      KERNEL_NAME:
        description: "内核命名"
        required: true
        default: '-android15-8-@'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AK3_ACCESS_TOKEN: ${{ secrets.AK3_ACCESS_TOKEN }}
      CCACHE_COMPRESS: "true"
      CCACHE_DIR: /github/workspace/.ccache

    steps:
      - name: 释放磁盘空间
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: true
          remove-android: true
          remove-haskell: true
          remove-codeql: true

      - name: 配置Git环境
        run: |
          git config --global user.name "build-bot"
          git config --global user.email "2106456897@qq.com"
          git config --global http.postBuffer 524288000

      - name: 安装系统依赖
        run: |
          sudo apt-get update -qq
          sudo DEBIAN_FRONTEND=noninteractive apt-get upgrade -y
          sudo apt-get install -y \
            python3 \
            git-core \
            curl \
            ccache \
            libssl-dev \
            bc \
            flex \
            bison \
            rsync

      - name: 初始化Repo环境
        run: |
          curl -sSL https://storage.googleapis.com/git-repo-downloads/repo > repo
          chmod a+x repo
          sudo mv repo /usr/local/bin/
          mkdir -p kernel_workspace
          cd kernel_workspace

          repo init \
            -u https://github.com/MAXCUK/kernel_manifest.git \
            -b refs/heads/oneplus/${{ github.event.inputs.CPU }} \
            -m ${{ github.event.inputs.FEIL }}.xml \
            --depth=1 \
            --repo-url=https://gerrit.googlesource.com/git-repo

          repo sync \
            -c \
            -j$(nproc --all) \
            --no-tags \
            --no-clone-bundle

      - name: 清理保护导出
        run: |
          find kernel_workspace -name 'abi_gki_protected_exports_*' -delete

      - name: 配置KernelSU
        run: |
          cd kernel_workspace/kernel_platform
          curl -fsSL "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-dev

          cd KernelSU
          KSU_COMMITS=$(git rev-list --count main)
          echo "KSUVER=$((KSU_COMMITS + 10606))" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=$((KSU_COMMITS + 10606))/" kernel/Makefile

      - name: 部署SUSFS
        run: |
          cd kernel_workspace
          git clone --depth 1 --branch gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }} \
            https://gitlab.com/simonpunk/susfs4ksu.git
          git clone --depth 1 https://github.com/ExmikoN/SukiSU_patch.git

          # 创建目录结构
          mkdir -p kernel_platform/common/{fs,include/linux,lib/lz4k,lib/lz4kd,crypto}

          # 复制SUSFS文件
          rsync -av susfs4ksu/kernel_patches/fs/ kernel_platform/common/fs/
          rsync -av susfs4ksu/kernel_patches/include/linux/ kernel_platform/common/include/linux/

          # 复制LZ4K组件
          rsync -av SukiSU_patch/other/lz4k/include/linux/ kernel_platform/common/include/linux/
          rsync -av SukiSU_patch/other/lz4k/lib/ kernel_platform/common/lib/
          rsync -av SukiSU_patch/other/lz4k/crypto/ kernel_platform/common/crypto/

          # 应用补丁
          cd kernel_platform/common
          cp ../../susfs4ksu/kernel_patches/50_add_susfs_in_gki-*.patch .
          patch -p1 --ignore-whitespace < 50_add_susfs_in_gki-*.patch || true
          patch -p1 -F3 < ../../SukiSU_patch/hooks/syscall_hooks.patch

      - name: 应用LZ4K补丁
        run: |
          cd kernel_workspace/kernel_platform/common
          patch -p1 -F3 < ../../SukiSU_patch/other/lz4k_patch/${{ github.event.inputs.KERNEL_VERSION }}/lz4kd.patch || :

      - name: 配置内核参数
        run: |
          cd kernel_workspace/kernel_platform
          CONFIG_FILE="common/arch/arm64/configs/gki_defconfig"

          # 核心配置
          declare -A CONFIG_MAP=(
            ["KSU"]=y
            ["KPM"]=y
            ["KSU_SUSFS"]=y
            ["CRYPTO_LZ4HC"]=y
            ["CRYPTO_LZ4K"]=y
            ["CRYPTO_LZ4KD"]=y
            ["CRYPTO_842"]=y
          )

          for key in "${!CONFIG_MAP[@]}"; do
            grep -qF "CONFIG_${key}=${CONFIG_MAP[$key]}" "$CONFIG_FILE" || echo "CONFIG_${key}=${CONFIG_MAP[$key]}" >> "$CONFIG_FILE"
          done

          # 移除配置检查
          sed -i 's/check_defconfig//' common/build.config.gki
          git commit -am "BUILD: 更新内核配置"

      - name: 定制内核信息
        run: |
          cd kernel_workspace/kernel_platform
          sed -i \
            -e 's|res="\$res\$(cat "\$file")"|res="${{ github.event.inputs.KERNEL_NAME }}"|g' \
            common/scripts/setlocalversion

      - name: 整合调度扩展
        run: |
          cd kernel_workspace/kernel_platform
          git clone --depth 1 https://github.com/egcd123/sched_ext.git
          rsync -a sched_ext/ common/kernel/sched/
          
          sed -i.bak $'/^# include "ext.c"/a\\\n# include "hmbird_sched_proc_main.c"\\\n#endif\\\n\\\n#ifdef CONFIG_SLIM_SCHED\\\n# include "slim_sysctl.c"' \
            common/kernel/sched/build_policy.c

      - name: 编译内核
        run: |
          cd kernel_workspace/kernel_platform
          ccache -M 4G
          ccache -s
          
          tools/bazel run \
            --config=fast \
            --config=stamp \
            --lto=thin \
            //common:kernel_aarch64_dist -- \
            --dist_dir=dist

      - name: 生成内核镜像
        run: |
          cd kernel_workspace/kernel_platform/dist
          curl -LOfs --retry 3 https://github.com/ShirkNeko/SukiSU_KernelPatch_patch/releases/download/0.11-beta/patch_linux
          chmod +x patch_linux
          
          cp Image Image_original
          ./patch_linux
          mv oImage Image_kpm

      - name: 准备刷机包
        run: |
          cd kernel_workspace/kernel_platform/dist
          for variant in kpm no_kpm; do
            git clone \
              --depth 1 \
              "https://${AK3_ACCESS_TOKEN}@github.com/MAXCUK/AnyKernel3-ace5Pro.git" \
              "AnyKernel3-${variant}"
            rm -rf "AnyKernel3-${variant}/.git"
            cp Image${variant/_kpm/} "AnyKernel3-${variant}/Image"
            (cd "AnyKernel3-${variant}" && zip -r9 "../AnyKernel3_${variant}.zip" ./*)
          done

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: OnePlus_Ace5Pro_Kernel_${{ env.KSUVER }}
          path: |
            kernel_workspace/kernel_platform/dist/AnyKernel3_*.zip
