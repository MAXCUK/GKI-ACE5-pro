name: ace5pro gki

on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8750'
      FEIL:
        description: "配置文件"
        required: true
        default: 'oneplus_ace5_pro'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'sun'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android15'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '6.6'
      KERNEL_NAME:
        description: "修改内核名称"
        required: true
        default: '-android15-8-@'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"

    steps:
      - name: 检查构建环境
        run: |
          echo "检查依赖..."
          sudo apt update && sudo apt install -y python3 git curl || { echo "依赖安装失败"; exit 1; }
          echo "依赖检查完成"

      - name: 最大化构建空间
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: 配置 Git
        run: |
          git config --global user.name "build"
          git config --global user.email "2106456897@qq.com"
          echo "Git 配置完成"

      - name: 安装 repo 工具
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo
          echo "repo 工具安装完成"

      - name: 初始化仓库并同步代码
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          echo "初始化 repo..."
          repo init -u https://github.com/JiuGeFaCai/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1 || { echo "repo 初始化失败"; exit 1; }
          echo "同步代码..."
          repo sync -c -j$(nproc --all) --no-tags || { echo "代码同步失败"; exit 1; }

      - name: 设置 SukiSU 环境
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-dev || { echo "SukiSU 设置失败"; exit 1; }
          cd ./KernelSU
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10606)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          export KSU_VERSION=$KSU_VERSION
          echo "SukiSU 环境已成功设置，版本号：$KSU_VERSION"

      - name: 克隆 SUSFS 和补丁库
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }} || { echo "克隆 SUSFS 失败"; exit 1; }
          git clone https://github.com/ExmikoN/SukiSU_patch.git || { echo "克隆补丁库失败"; exit 1; }

      - name: 应用 SUSFS 补丁
        run: |
          cd kernel_workspace/kernel_platform
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
          patch -p1 < ./common/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || echo "补丁应用可能存在冲突"

      - name: 添加内核配置
        run: |
          cd kernel_workspace/kernel_platform
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4HC=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "内核配置已更新"

      - name: 构建内核
        run: |
          cd kernel_workspace/kernel_platform
          tools/bazel run --config=fast --config=stamp --lto=thin //common:kernel_aarch64_dist -- --dist_dir=dist || { echo "内核构建失败"; exit 1; }
          echo "内核构建完成"

      - name: 生成内核镜像
        run: |
          cd kernel_workspace/kernel_platform/dist
          cp Image Image_original
          curl -LO https://github.com/ShirkNeko/SukiSU_KernelPatch_patch/releases/download/0.11-beta/patch_linux
          chmod +x patch_linux
          ./patch_linux || { echo "镜像生成失败"; exit 1; }
          echo "镜像生成完成"

      - name: 准备 AnyKernel3 包
        run: |
          cd kernel_workspace/kernel_platform/dist
          git clone https://github.com/egcd123/AnyKernel3-ace5Pro.git AnyKernel3-no_kpm --depth=1
          cp Image AnyKernel3-no_kpm/Image
          echo "AnyKernel3 包已准备"

      - name: 上传构建工件
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_oneplus_ace5_pro_${{ env.KSUVER }}_no_kpm
          path: kernel_workspace/kernel_platform/dist/AnyKernel3-no_kpm/*