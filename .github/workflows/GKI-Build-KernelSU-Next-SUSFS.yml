name: ace5pro gki
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8750'
      FEIL:
        description: "配置文件"
        required: true
        default: 'oneplus_ace5_pro'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'sun'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android15'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '6.6'
      KERNEL_NAME:
        description: "修改内核名称"
        required: true
        default: '-android15-8-@'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AK3_ACCESS_TOKEN: ${{ secrets.AK3_ACCESS_TOKEN }}
      WORKSPACE: ${{ github.workspace }}/kernel_workspace
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: true
          remove-android: true
          remove-haskell: true
          remove-codeql: true

      - name: Configure Git
        run: |
          git config --global user.name "build"
          git config --global user.email "2106456897@qq.com"

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y python3 git curl ccache build-essential flex bison libssl-dev libelf-dev

      - name: Setup repo tool
        run: |
          curl -s https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize kernel source
        run: |
          mkdir -p ${{ env.WORKSPACE }} && cd ${{ env.WORKSPACE }}
          repo init -u https://github.com/JiuGeFaCai/kernel_manifest.git \
            -b refs/heads/oneplus/${{ inputs.CPU }} \
            -m ${{ inputs.FEIL }}.xml \
            --depth=1
          repo sync -c -j$(nproc --all) --no-tags --force-sync
          find . -name 'abi_gki_protected_exports_*' -delete -print

      - name: Setup KernelSU
        run: |
          cd ${{ env.WORKSPACE }}/kernel_platform
          curl -sL "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-dev
          cd KernelSU
          KSU_VERSION=$(($(git rev-list --count main) + 10606))
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile

      - name: Apply SUSFS patches
        run: |
          cd ${{ env.WORKSPACE }}
          git clone -q https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ inputs.ANDROID_VERSION }}-${{ inputs.KERNEL_VERSION }}
          git clone -q https://github.com/ExmikoN/SukiSU_patch.git

          cd kernel_platform
          cp -v ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ inputs.ANDROID_VERSION }}-${{ inputs.KERNEL_VERSION }}.patch common/
          cp -vr ../susfs4ksu/kernel_patches/fs/* common/fs/
          cp -vr ../susfs4ksu/kernel_patches/include/linux/* common/include/linux/
          cp -vr ../SukiSU_patch/other/lz4k/{include/linux/*,lib/*,crypto/*} common/

          cd common
          sed -i -e '/#include <trace\/hooks\/fs.h>/d' \
                 -e 's/-32,12 +32,38/-32,11 +32,37/' \
                  50_add_susfs_in_gki-${{ inputs.ANDROID_VERSION }}-${{ inputs.KERNEL_VERSION }}.patch
          patch -p1 --force < 50_add_susfs_in_gki-${{ inputs.ANDROID_VERSION }}-${{ inputs.KERNEL_VERSION }}.patch || true
          patch -p1 -F 3 < ../../SukiSU_patch/hooks/syscall_hooks.patch

      - name: Apply compression patches
        run: |
          cd ${{ env.WORKSPACE }}/kernel_platform/common
          cp ../../SukiSU_patch/other/lz4k_patch/${{ inputs.KERNEL_VERSION }}/lz4kd.patch .
          patch -p1 -F 3 --force < lz4kd.patch || true

      - name: Configure kernel options
        run: |
          cd ${{ env.WORKSPACE }}/kernel_platform
          cat <<EOF >> common/arch/arm64/configs/gki_defconfig
          CONFIG_KSU=y
          CONFIG_KPM=y
          CONFIG_KSU_SUSFS=y
          CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y
          CONFIG_KSU_SUSFS_SUS_PATH=y
          CONFIG_KSU_SUSFS_SUS_MOUNT=y
          CONFIG_CRYPTO_LZ4HC=y
          CONFIG_CRYPTO_LZ4K=y
          CONFIG_CRYPTO_LZ4KD=y
          CONFIG_CRYPTO_842=y
          EOF
          sed -i 's/check_defconfig//' common/build.config.gki
          git add -A && git commit -m "BUILD: Apply kernel configurations"

      - name: Customize kernel version
        run: |
          cd ${{ env.WORKSPACE }}/kernel_platform
          sed -i "s|res=\"\$res\$(cat \"\$file\")\"|res=\"${{ inputs.KERNEL_NAME }}\"|g" common/scripts/setlocalversion

      - name: Integrate scheduler
        run: |
          cd ${{ env.WORKSPACE }}/kernel_platform
          git clone -q https://github.com/MAXCUK/sched.git
          cp -r sched/* common/kernel/sched/
          rm -rf sched/.git
          sed -i.bak '/# include "ext.c"/a\# include "hmbird_sched_proc_main.c"\n#endif\n\n#ifdef CONFIG_SLIM_SCHED\n# include "slim_sysctl.c"' \
            common/kernel/sched/build_policy.c

      - name: Build kernel
        run: |
          cd ${{ env.WORKSPACE }}/kernel_platform
          tools/bazel run --config=fast --config=stamp --lto=thin //common:kernel_aarch64_dist -- --dist_dir=dist

      - name: Post-process images
        run: |
          cd ${{ env.WORKSPACE }}/kernel_platform/dist
          cp Image Image_original
          curl -sLO https://github.com/ShirkNeko/SukiSU_KernelPatch_patch/releases/download/0.11-beta/patch_linux
          chmod +x patch_linux && ./patch_linux
          mv oImage Image_kpm

      - name: Package artifacts
        run: |
          cd ${{ env.WORKSPACE }}/kernel_platform/dist
          for variant in no_kpm kpm; do
            git clone -q https://${{ env.AK3_ACCESS_TOKEN }}@github.com/MAXCUK/AnyKernel3-ace5Pro.git AnyKernel3-${variant}
            find AnyKernel3-${variant} -name '.git*' -delete
            [ $variant = "kpm" ] && cp Image_kpm AnyKernel3-${variant}/Image || cp Image AnyKernel3-${variant}/Image
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: KernelBuilds_${{ env.KSUVER }}
          path: |
            ${{ env.WORKSPACE }}/kernel_platform/dist/AnyKernel3-no_kpm/*
            ${{ env.WORKSPACE }}/kernel_platform/dist/AnyKernel3-kpm/*
