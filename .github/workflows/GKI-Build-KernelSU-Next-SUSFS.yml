name: ace5pro gki
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8750'
      FEIL:
        description: "配置文件"
        required: true
        default: 'oneplus_ace5_pro'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'sun'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android15'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '6.6'
      KERNEL_NAME:
        description: "修改内核名称"
        required: true
        default: '-android15-8-@'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
          git config --global user.name "build"
          git config --global user.email "2106456897@qq.com"

      - name: Setup SSH Keys
        run: |
          mkdir -p ~/.ssh
          # 使用EOF保留密钥格式
          cat << EOF > ~/.ssh/id_ed25519
          ${{ secrets.SSH_PRIVATE_KEY }}
          EOF
          # 设置严格权限
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/*
          # 生成SSH配置文件
          cat << EOF > ~/.ssh/config
          Host github.com
              HostName github.com
              User git
              IdentityFile ~/.ssh/id_ed25519
              IdentitiesOnly yes
              StrictHostKeyChecking no
              LogLevel DEBUG3
          EOF
          # 验证密钥有效性
          ssh-keygen -l -f ~/.ssh/id_ed25519
          # 测试SSH连接
          ssh -Tvvv git@github.com || true
          # 验证仓库访问
          git ls-remote git@github.com:MAXCUK/sched.git HEAD

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y python3 git curl ca-certificates

      - name: Install repo tool
        run: |
          curl -fsSL https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          repo init -u https://github.com/JiuGeFaCai/kernel_manifest.git \
            -b refs/heads/oneplus/${{ github.event.inputs.CPU }} \
            -m ${{ github.event.inputs.FEIL }}.xml \
            --depth=1
          repo --trace sync -c -j$(nproc --all) --no-tags --no-clone-bundle
          rm -f kernel_platform/common/android/abi_gki_protected_exports_* 2>/dev/null || true
          rm -f kernel_platform/msm-kernel/android/abi_gki_protected_exports_* 2>/dev/null || true

      - name: Set up SukiSU
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-dev
          cd ./KernelSU
          KSU_VERSION=$(expr $(git rev-list --count main) "+" 10606)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile

      - name: Set up susfs
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
          git clone https://github.com/ExmikoN/SukiSU_patch.git

          cd kernel_platform        
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
          cp -r ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp -r ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
          # 处理lz4k补丁
          cp -r ../SukiSU_patch/other/lz4k/include/linux/* ./common/include/linux
          cp -r ../SukiSU_patch/other/lz4k/lib/* ./common/lib
          cp -r ../SukiSU_patch/other/lz4k/crypto/* ./common/crypto
          # 应用补丁
          cd ./common
          sed -i 's/-32,12 +32,38/-32,11 +32,37/g' 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch
          sed -i '/#include <trace\/hooks\/fs.h>/d' 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch
          patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true
          cp ../../SukiSU_patch/hooks/syscall_hooks.patch ./
          patch -p1 -F 3 < syscall_hooks.patch

      - name: Apply lz4kd Patches
        run: |
          cd kernel_workspace/kernel_platform/common
          cp ../../SukiSU_patch/other/lz4k_patch/${{ github.event.inputs.KERNEL_VERSION }}/lz4kd.patch ./
          patch -p1 -F 3 < lz4kd.patch || true

      - name: Add SUSFS Configuration Settings
        run: |
          cd kernel_workspace/kernel_platform
          {
            echo "CONFIG_KSU=y";
            echo "CONFIG_KPM=y";
            echo "CONFIG_KSU_SUSFS_SUS_SU=n";
            echo "CONFIG_KSU_MANUAL_HOOK=y";
            echo "CONFIG_KSU_SUSFS=y";
            echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y";
            echo "CONFIG_KSU_SUSFS_SUS_PATH=y";
            echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y";
            echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y";
            echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y";
            echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y";
            echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n";
            echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y";
            echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y";
            echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y";
            echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y";
            echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y";
            echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y";
            echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y";
            echo "CONFIG_CRYPTO_LZ4HC=y";
            echo "CONFIG_CRYPTO_LZ4K=y";
            echo "CONFIG_CRYPTO_LZ4KD=y";
            echo "CONFIG_CRYPTO_842=y";
          } >> ./common/arch/arm64/configs/gki_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki
          cd common
          git add -A && git commit -a -m "BUILD Kernel: Apply SUSFS configs"

      - name: Add make name
        run: |
          cd kernel_workspace/kernel_platform
          sed -i 's/res="\$res\$(cat "\$file")"/res="${{ github.event.inputs.KERNEL_NAME }}"/g' ./common/scripts/setlocalversion

      - name: Configure sched_ext Driver
        run: |
          cd kernel_workspace/kernel_platform/common/kernel/sched
          if [[ ! -f "slim_sysctl.c" || ! -f "hmbird_sched_proc_main.c" ]]; then
              echo "正在克隆sched扩展驱动仓库..."
              tmp_dir=$(mktemp -d)
              GIT_SSH_COMMAND="ssh -v" git clone \
                git@github.com:MAXCUK/sched.git \
                "$tmp_dir" \
                --depth=1 \
                --branch=main
              find "$tmp_dir" -type f \( -name "*.c" -o -name "*.h" \) -exec cp -v --backup=numbered {} . \;
              rm -rf "$tmp_dir"
          fi
          echo "✅ sched_ext配置完成"

      - name: Build kernel
        run: |
          cd kernel_workspace/kernel_platform
          echo "开始编译内核..."
          tools/bazel run \
            --config=fast \
            --config=stamp \
            --lto=thin \
            //common:kernel_aarch64_dist \
            -- \
            --dist_dir=dist \
            --kmi_symbol_list=abi_gki_protected_exports

      - name: Generate Kernel Images
        run: |
          cd kernel_workspace/kernel_platform/dist
          cp Image Image_original
          echo "下载内核补丁工具..."
          curl -fL -o patch_linux \
            https://github.com/ShirkNeko/SukiSU_KernelPatch_patch/releases/download/0.11-beta/patch_linux
          chmod +x patch_linux
          ./patch_linux
          mv oImage Image_kpm
          mv Image_original Image

      - name: Prepare AnyKernel3 Packages
        run: |
          cd kernel_workspace/kernel_platform/dist
          echo "正在准备刷机包..."
          git clone git@github.com:MAXCUK/AnyKernel3-ace5Pro.git AnyKernel3-no_kpm --depth=1
          git clone git@github.com:MAXCUK/AnyKernel3-ace5Pro.git AnyKernel3-kpm --depth=1
          rm -rf AnyKernel3-{kpm,no_kpm}/.git
          find AnyKernel3-{kpm,no_kpm} -name "push.sh" -delete

      - name: 复制镜像到对应目录
        run: |
          cd kernel_workspace/kernel_platform/dist
          cp -v Image AnyKernel3-no_kpm/Image
          cp -v Image_kpm AnyKernel3-kpm/Image
          echo "镜像复制完成"

      - name: Upload AnyKernel3 (no_KPM)
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_oneplus_ace5_pro_${{ env.KSUVER }}_no_kpm
          path: kernel_workspace/kernel_platform/dist/AnyKernel3-no_kpm/*

      - name: Upload AnyKernel3 (KPM)
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_oneplus_ace5_pro_${{ env.KSUVER }}_kpm
          path: kernel_workspace/kernel_platform/dist/AnyKernel3-kpm/*
